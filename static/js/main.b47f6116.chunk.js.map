{"version":3,"sources":["assets/defaultFavicon.ico","assets/redFavicon.ico","assets/blueFavicon.ico","assets/yellowFavicon.ico","assets/greenFavicon.ico","redux/reducer.js","redux/words.js","Timer.js","Network.js","Game.js","Home.js","Settings.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","page","joinedGame","stateID","gameID","Math","floor","random","players","timer","currentTime","time","started","darkMode","colorBlind","color","board","turn","teams","winner","timeout","applySetPage","state","action","applySetJoinedGamw","applySetStateID","applySetGameID","applySetPlayers","applySetTimer","applySetCurrentTime","applySetTime","applySetStarted","applySetDarkMode","applySetColorBlind","applySetColor","applySetBoard","applySetTurn","applySetTeams","applySetWinner","applySetTimeout","rootReducer","combineReducers","connect4State","type","addRedux","component","connect","dispatch","setPage","setJoinedGame","setStateID","setGameID","setPlayers","setTimer","setCurrentTime","setTime","setStarted","setDarkMode","setColorBlind","setColor","setBoard","setTurn","setTeams","setWinner","setTimeout","Timer","props","updated","this","clearInterval","setState","setInterval","tick","prevProps","prevState","className","React","server","favi","document","getElementById","setAttribute","defaultFavicon","redFavicon","yellowFavicon","greenFavicon","blueFavicon","column","axios","post","then","_","toLocaleLowerCase","borders","tileBorders","href","window","location","host","map","team","key","toLowerCase","defaultChecked","id","onClick","e","stopPropagation","target","value","name","htmlFor","row","idx1","tile","idx2","preventDefault","place","reset","rel","handleClick","bind","data","counter","sock","WebSocket","onopen","send","JSON","stringify","onmessage","msg","json","parse","state_id","has_timer","cur_time","onclose","readyState","CLOSED","subscribe","includes","length","history","pushState","onSubmit","autoFocus","onChange","parseInt","toggle","Settings","save","body","removeAttribute","localStorage","getItem","settings","setItem","load","pathname","slice","Home","Game","ReactDOM","render","store","createStore","basename","process","path","App"],"mappings":"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","file":"static/js/main.b47f6116.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultFavicon.913600e4.ico\";","module.exports = __webpack_public_path__ + \"static/media/redFavicon.3401ab9d.ico\";","module.exports = __webpack_public_path__ + \"static/media/blueFavicon.874514d6.ico\";","module.exports = __webpack_public_path__ + \"static/media/yellowFavicon.632fadd3.ico\";","module.exports = __webpack_public_path__ + \"static/media/greenFavicon.bb6577c1.ico\";","import { combineReducers } from 'redux';\nimport {connect} from \"react-redux\";\nimport {adjectives, nouns} from \"./words\";\n\nconst INITIAL_STATE = {\n    // site data\n    page: \"HOME\",       // current page\n    joinedGame: false,     // whether a game is joined\n    stateID: \"\",        // current game state ID\n    gameID: adjectives[Math.floor(Math.random() * 50)] + \"-\" + nouns[Math.floor(Math.random() * 50)], // ID of current game\n\n    players: 2,         // number of players\n    timer: false,       // false if no timer, true if timer\n    currentTime: -1,    // time left before turn ends\n    time: -1,           // time to refresh to after each turn\n    started: false,     // whether or not the game has started\n\n    // settings\n    darkMode: false,    // dark mode activated\n    colorBlind: false,  // color blind mode activated\n\n    // game data\n    color: \"Neutral\",   // the color of the player\n    board: [],          // the game board\n    turn: \"Neutral\",    // the current turn color\n    teams: [],          // team colors\n    winner: \"Neutral\",  // the game winner\n\n    timeout: false,     // true disables all requests as timed out\n};\n\n// reducers\nconst applySetPage = (state, action) => ({ ...state, page: action.page });\nconst applySetJoinedGamw = (state, action) => ({ ...state, joinedGame: action.joinedGame });\nconst applySetStateID = (state, action) => ({ ...state, stateID: action.stateID });\nconst applySetGameID = (state, action) => ({ ...state, gameID: action.gameID });\nconst applySetPlayers = (state, action) => ({ ...state, players: action.players });\nconst applySetTimer = (state, action) => ({ ...state, timer: action.timer });\nconst applySetCurrentTime = (state, action) => ({ ...state, currentTime: action.currentTime });\nconst applySetTime = (state, action) => ({ ...state, time: action.time });\nconst applySetStarted = (state, action) => ({ ...state, started: action.started });\nconst applySetDarkMode = (state, action) => ({ ...state, darkMode: action.darkMode });\nconst applySetColorBlind = (state, action) => ({ ...state, colorBlind: action.colorBlind });\nconst applySetColor = (state, action) => ({ ...state, color: action.color });\nconst applySetBoard = (state, action) => ({ ...state, board: action.board });\nconst applySetTurn = (state, action) => ({ ...state, turn: action.turn });\nconst applySetTeams = (state, action) => ({ ...state, teams: action.teams })\nconst applySetWinner = (state, action) => ({ ...state, winner: action.winner });\nconst applySetTimeout = (state, action) => ({ ...state, timeout: action.timeout });\n\n// reducer\nfunction reducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'PAGE_SET': { return applySetPage(state, action); }\n        case 'JOINEDGAME_SET': { return applySetJoinedGamw(state, action) }\n        case 'STATEID_SET': { return applySetStateID(state, action); }\n        case 'GAMEID_SET': { return applySetGameID(state, action); }\n        case 'PLAYERS_SET': { return applySetPlayers(state, action); }\n        case 'TIMER_SET': { return applySetTimer(state, action); }\n        case 'CURRENTTIME_SET': { return applySetCurrentTime(state, action); }\n        case 'TIME_SET': { return applySetTime(state, action); }\n        case 'STARTED_SET': { return applySetStarted(state, action); }\n\n        case 'DARKMODE_SET': { return applySetDarkMode(state, action); }\n        case 'COLORBLIND_SET': { return applySetColorBlind(state, action); }\n\n        case 'COLOR_SET': { return applySetColor(state, action); }\n        case 'BOARD_SET': { return applySetBoard(state, action); }\n        case 'TURN_SET': { return applySetTurn(state, action); }\n        case 'TEAMS_SET': { return applySetTeams(state, action); }\n        case 'WINNER_SET': { return applySetWinner(state, action); }\n\n        case 'TIMEOUT_SET': { return applySetTimeout(state, action); }\n        default: { return state; }\n    }\n}\n\nconst rootReducer = combineReducers({ connect4State: reducer })\nexport default rootReducer;\n\n/**\n * Add redux data to react component.\n * @param component - the react component to add redux data to.\n * @returns {*} an new component with added redux data.\n */\nexport function addRedux(component) {\n    function mapStateToProps(state) {\n        return {\n            page: state.connect4State.page,\n            joinedGame: state.connect4State.joinedGame,\n            stateID:  state.connect4State.stateID,\n            gameID: state.connect4State.gameID,\n            players: state.connect4State.players,\n            timer: state.connect4State.timer,\n            currentTime: state.connect4State.currentTime,\n            time: state.connect4State.time,\n            started: state.connect4State.started,\n\n            darkMode: state.connect4State.darkMode,\n            colorBlind: state.connect4State.colorBlind,\n\n            color: state.connect4State.color,\n            board: state.connect4State.board,\n            turn: state.connect4State.turn,\n            teams: state.connect4State.teams,\n            winner: state.connect4State.winner,\n\n            timeout: state.connect4State.timeout,\n        };\n    }\n    const mapDispatchToProps = (dispatch) => ({\n        setPage: (page) => { dispatch({type: 'PAGE_SET', page}); },\n        setJoinedGame: (joinedGame) => { dispatch({type: 'JOINEDGAME_SET', joinedGame}) },\n        setStateID: (stateID) => { dispatch({type: 'StateID_SET', stateID}); },\n        setGameID: (gameID) => { dispatch({type: 'GAMEID_SET', gameID}); },\n        setPlayers: (players) => { dispatch({type: 'PLAYERS_SET', players}); },\n        setTimer: (timer) => { dispatch({type: 'TIMER_SET', timer}); },\n        setCurrentTime: (currentTime) => { dispatch({type: 'CURRENTTIME_SET', currentTime}); },\n        setTime: (time) => { dispatch({type: 'TIME_SET', time}); },\n        setStarted: (started) => { dispatch({type: 'STARTED_SET', started}); },\n\n        setDarkMode: (darkMode) => { dispatch({type: 'DARKMODE_SET', darkMode}); },\n        setColorBlind: (colorBlind) => { dispatch({type: 'COLORBLIND_SET', colorBlind}); },\n\n        setColor: (color) => { dispatch({type: 'COLOR_SET', color}); },\n        setBoard: (board) => { dispatch({type: 'BOARD_SET', board}); },\n        setTurn: (turn) => { dispatch({type: 'TURN_SET', turn}); },\n        setTeams: (teams) => { dispatch({type: 'TEAMS_SET', teams}); },\n        setWinner: (winner) => { dispatch({type: 'WINNER_SET', winner}); },\n\n        setTimeout: (timeout) => { dispatch({type: 'TIMEOUT_SET', timeout}); }\n    });\n    return connect(mapStateToProps, mapDispatchToProps)(component);\n}","export const adjectives = [\"slim\", \"earthy\", \"ablaze\", \"hot\", \"magnificent\", \"cold\", \"jagged\", \"lucky\",\n    \"warm\", \"highfalutin\", \"similar\", \"salty\", \"confident\", \"fuzzy\", \"aquatic\", \"strict\", \"fast\", \"petite\", \"excited\",\n    \"efficient\", \"slow\", \"nervous\", \"narrow\", \"loose\", \"dark\", \"gaping\", \"lowly\", \"rural\", \"savory\", \"amusing\", \"small\",\n    \"sore\", \"mature\", \"sordid\", \"rhetorical\", \"soft\", \"strange\", \"significant\", \"savory\", \"sneaky\", \"little\",\n    \"absorbing\", \"nonchalant\", \"happy\", \"fluffy\", \"hard\", \"giant\", \"beneficial\", \"polite\", \"voracious\"]\n\nexport const nouns = [\"childhood\", \"restaurant\", \"elevator\", \"clarinet\", \"school\", \"cat\", \"dog\", \"horse\", \"town\",\n    \"medicine\", \"committee\", \"video\", \"hair\", \"home\", \"cow\", \"music\", \"worker\", \"bottle\", \"food\",\n    \"juice\", \"chair\", \"bench\", \"tuba\", \"vehicle\", \"car\", \"city\", \"assistant\", \"nature\", \"device\", \"lamp\",\n    \"cup\", \"lab\", \"room\", \"population\", \"bed\", \"guitar\", \"bird\", \"painting\", \"dad\", \"piano\",\n    \"bank\", \"error\", \"horn\", \"friend\", \"employee\", \"computer\", \"midnight\", \"card\", \"sun\", \"fan\"]\n","// Connect4 Timer Component\n\nimport * as React from \"react\";\n\nexport class Timer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { currentTime: props.currentTime }\n        this.timer = null;\n        this.updated = false;\n    }\n\n    tick() {\n        if (this.props.winner !== \"Neutral\") {\n            clearInterval(this.timer)\n            this.setState({\n                currentTime: this.props.time\n            });\n        } else if (this.updated === true) {\n            this.setState({\n                currentTime: this.props.currentTime\n            });\n            this.updated = false;\n        } else if (this.state.currentTime > 0) {\n            this.setState({\n                currentTime: this.state.currentTime - 1\n            });\n        }\n    }\n\n    componentDidMount() { this.timer = setInterval(() => this.tick(), 1000); }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.turn !== this.props.turn) {\n            clearInterval(this.timer);\n            this.updated = true;\n            this.timer = setInterval(() => this.tick(), 1000)\n        }\n    }\n\n    componentWillUnmount() { clearInterval(this.timer); }\n\n    render() {\n        return (<div className=\"standard-txt boldest-txt dark\">time: {this.state.currentTime}</div>)\n    }\n}","export const server = \"fregly-connect4.herokuapp.com\";","// Connect4 Game Page\n\nimport * as React from \"react\";\nimport {addRedux} from \"./redux/reducer\";\nimport axios from 'axios';\nimport {Timer} from \"./Timer\";\nimport defaultFavicon from \"./assets/defaultFavicon.ico\"\nimport redFavicon from \"./assets/redFavicon.ico\"\nimport blueFavicon from \"./assets/blueFavicon.ico\"\nimport yellowFavicon from \"./assets/yellowFavicon.ico\"\nimport greenFavicon from \"./assets/greenFavicon.ico\"\nimport {server} from \"./Network\";\n\n\nclass GamePage extends React.Component {\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.winner !== \"Neutral\") {\n            document.getElementById(\"favicon\").setAttribute(\"href\", defaultFavicon);\n        } else {\n            let favi;\n            if (this.props.turn === \"Red\") favi = redFavicon;\n            else if (this.props.turn === \"Yellow\") favi = yellowFavicon;\n            else if (this.props.turn === \"Green\") favi = greenFavicon;\n            else if (this.props.turn === \"Blue\") favi = blueFavicon;\n            else favi = defaultFavicon;\n            document.getElementById(\"favicon\").setAttribute(\"href\", favi);\n        }\n    }\n\n    /**\n     * POST place - send a place token request\n     * @param column - the column to place the token\n     */\n    place(column) {\n        if (this.props.timeout) return\n        axios.post('https://' + server + '/place', {\"game_id\": this.props.gameID, \"color\": this.props.color, \"column\": column}).then(_ => {})\n    }\n\n    /**\n     * POST reset - send a reset request\n     */\n    reset() {\n        if (this.props.timeout) return\n        axios.post('https://' + server + '/reset', {\"game_id\": this.props.gameID}).then(_ => {})\n    }\n\n    render() {\n        let turn = (this.props.winner !== \"Neutral\") ? this.props.winner.toLocaleLowerCase() : this.props.turn.toLocaleLowerCase()\n        let borders = (this.props.colorBlind) ? \"-blind-border\" : \"-border\";\n        let tileBorders = (this.props.colorBlind) ? \"-tile-blind-border\" : \"\";\n        return (\n            <div className=\"flexbox flex-column flex-center full-height\">\n                { this.props.timeout ? <div className=\"banner standard-txt flexbox flex-center flex-column full-width\">\n                    Connection timeout. Please refresh the page.\n                </div> : null }\n                <div className=\"flexbox flex-column flex-center game-width\">\n                    <h1 className=\"title-txt large-padding-top\"><a className=\"red remove-hyperlink\" href={'http://' + window.location.host}>CONNECT<span className=\"blue\">4</span></a></h1>\n                    <p className=\"flex-self-start small-txt lighter-txt dark medium-padding-top\">Share this link with friends: <a className=\"dark\" href={\"https://\" +  window.location.host + \"/\" + this.props.gameID}>{\"https://\" +  window.location.host + \"/\" + this.props.gameID}</a></p>\n                    <hr className=\"full-width dark\"/>\n                    <div className=\"full-width\">\n                        <div className=\"flexbox space-between full-width small-padding-top\">\n                            <div className=\"flexbox\">\n                                { this.props.teams.map((team) =>\n                                    <div key={team + \"-div\"} className={\"color-input \" + team.toLowerCase() + \"-input-background \" + team.toLowerCase() + borders }>\n                                        <input defaultChecked={this.props.color === team} key={team + \"-input\"} id={team} onClick={e => {\n                                        e.stopPropagation();\n                                        this.props.setColor(e.target.value)\n                                        }} name=\"color\" type=\"radio\" value={team}/>\n                                        <label key={team + \"-label\"} htmlFor={team}\n                                               className={team.toLowerCase() + \" boldest-txt small-txt\"}>\n                                            {team.toLowerCase()}</label>\n                                    </div>\n                                ) }\n                            </div>\n                            <div className=\"flexbox\">\n                                <p className={turn + \" standard-txt boldest-txt flex-self-end\"}>{\n                                    this.props.winner !== \"Neutral\" ?\n                                        this.props.winner.toLowerCase() + \" wins!\" :\n                                        this.props.turn.toLowerCase() + \" turn\"\n                                }</p>\n                            </div>\n                        </div>\n                        <div className=\"flexbox flex-column flex-center small-margin-top blue-background small-padding\">\n                            <div className=\"full-width\">{\n                                this.props.board.map((row, idx1) => {\n                                    return (\n                                        <div key={\"rpw-\" + idx1} className=\"full-width flexbox space-between\">\n                                            {row.map((tile, idx2) => {\n                                                return <button className=\"tile\" key={idx1 + \",\" + idx2} onClick={ e => {\n                                                    e.preventDefault();\n                                                    this.place(idx2);\n                                                }}>\n                                                    <div className={tile.toLowerCase() + \"-background \" + tile.toLowerCase() + tileBorders}/>\n                                                </button>\n                                            })}\n                                        </div>\n                                    )\n                                })\n                            }</div>\n                        </div>\n                        <div className=\"flexbox space-between full-width small-padding-top\">\n                            {\n                                this.props.started && this.props.timer ?\n                                    <Timer time={this.props.time} currentTime={this.props.currentTime} turn={this.props.turn} winner={this.props.winner}/> :\n                                    this.props.timer ?\n                                        <div className=\"standard-txt boldest-txt dark\">time: {this.props.time}</div> :\n                                        <div/>\n                            }\n                            <div className=\"flexbox flex-center\">\n                                <div className=\"flexbox flex-center small-padding-right\">\n                                    <button className=\"fas fa-cog dark gear\" onClick={(e) => {\n                                        e.preventDefault();\n                                        this.props.setPage(\"SETTINGS\");\n                                    }}/>\n                                </div>\n                                <div className=\"flexbox flex-center\">\n                                    <button onClick={(e) => {\n                                        e.preventDefault();\n                                        this.reset();\n                                    }} className=\"resetBtn smallest-txt bolder-txt\">new game</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"absolute bottom dev\">\n                    <p className=\"small-txt lighter-txt gray\">Keep the developer <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"gray\" href=\"https://www.buymeacoffee.com/cfregly\">caffeinated</a></p>\n                </div>\n            </div>\n        )\n    }\n}\nexport default addRedux(GamePage);","// Connect4 Home Page\n\nimport * as React from \"react\";\nimport {addRedux} from \"./redux/reducer\";\nimport axios from 'axios';\nimport {server} from \"./Network\";\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    subscribe(data, counter) {\n        axios.post('https://' + server + '/join', data).then(_ => {\n            let sock = new WebSocket('wss://' + server + '/subscribe');\n            sock.onopen = () => { sock.send(JSON.stringify({ \"game_id\": this.props.gameID })); }\n            sock.onmessage = (msg) => {\n                let json = JSON.parse(msg.data)\n                if (this.props.stateID !== json.state_id) {\n                    this.props.setStateID(json.state_id);\n                    this.props.setBoard(json.board);\n                    this.props.setTurn(json.turn);\n                    this.props.setTeams(json.teams);\n                    this.props.setWinner(json.winner);\n                    this.props.setTimer(json.has_timer);\n                    this.props.setCurrentTime(json.cur_time);\n                    this.props.setTime(json.time);\n                    this.props.setStarted(json.started);\n                }\n            }\n            sock.onclose = () => {\n                // Websocket connection dropped after too many refreshes\n                if (counter < 5) {\n                    if (sock.readyState === WebSocket.CLOSED) { this.subscribe(data, counter + 1); }\n                } else {\n                    this.props.setTimeout(true);\n                }\n            }\n        })\n    }\n\n    // Joins a game and opens a websocket for future updates\n    handleClick(e) {\n        e.preventDefault();\n        if (this.props.gameID.includes(\" \") || this.props.gameID.length < 3) return\n        let data = {\"game_id\": this.props.gameID, \"players\": this.props.players, \"timer\": this.props.timer};\n        this.subscribe(data, 0);\n        this.props.setJoinedGame(true);\n        this.props.setPage(\"GAME\");\n        window.history.pushState(null, '', '/' + this.props.gameID);\n    }\n\n    render() {\n        return (\n            <div className=\"flexbox flex-column flex-center full-height\">\n                <div className=\"flexbox flex-column flex-center half-width\">\n                    <h1 className=\"title-txt large-padding-top\"><a className=\"red remove-hyperlink\" href={'http://' + window.location.host}>CONNECT<span className=\"blue\">4</span></a></h1>\n                    <p className=\"standard-txt lighter-txt gray large-padding-top\">\n                        Play 2-3 player connect4 against friends on one or more devices.\n                        To create a game or join an existing one, enter a game ID and click 'Go'.\n                    </p>\n                    <form className=\"flexbox large-padding-top full-width\" onSubmit={this.handleClick}>\n                        <input className=\"input\" autoFocus type=\"text\" value={this.props.gameID}\n                               onChange={(e) => this.props.setGameID(e.target.value)}/>\n                        <button className=\"goBtn\" onClick={this.handleClick}>Go</button>\n                    </form>\n                    <div className=\"flexbox flex-self-end small-padding-top\">\n                        <div className=\"flexbox flex-center small-padding-right\">\n                            <button className=\"fas fa-cog dark gear\" onClick={(e) => {\n                                e.preventDefault();\n                                this.props.setPage(\"SETTINGS\");\n                            }}/>\n                        </div>\n                        <div className=\"flexbox flex-center medium-padding-right\">\n                            <label className=\"small-padding-right standard-txt boldest-txt blue\" htmlFor=\"players\">PLAYERS</label>\n                            <select className=\"small-txt boldest-txt select\" name=\"players\" id=\"players\"\n                                    onChange={(e) => this.props.setPlayers(parseInt(e.target.value))}>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                            </select>\n                        </div>\n                        <div className=\"flexbox flex-center\">\n                            <label className=\"small-padding-right standard-txt boldest-txt blue\">TIMER</label>\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" onChange={(e) => {\n                                    e.stopPropagation();\n                                    this.props.setTimer(!this.props.timer);}\n                                }/>\n                                <span className=\"slider round\"/>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"absolute bottom\">\n                    <p className=\"small-txt lighter-txt gray\">Keep the developer <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"gray\" href=\"https://www.buymeacoffee.com/cfregly\">caffeinated</a></p>\n                </div>\n            </div>\n        )\n    }\n}\nexport default addRedux(HomePage);","// Connect4 Settings Page\n\nimport * as React from \"react\";\nimport {addRedux} from \"./redux/reducer\";\n\nclass SettingsPage extends React.Component {\n    render() {\n        return (\n            <div className=\"flexbox flex-column flex-center full-height\">\n                <button className=\"absolute exit\" onClick={(e) => {\n                    e.preventDefault();\n                    this.props.setPage(this.props.joinedGame ? \"GAME\" : \"HOME\")\n                }}/>\n                <div className=\"flexbox flex-column flex-center half-width\">\n                    <div className=\"flexbox flex-column flex-center\">\n                        <h1 className=\"title-txt large-padding-top\"><a className=\"red remove-hyperlink\" href={'http://' + window.location.host}>CONNECT<span className=\"blue\">4</span></a></h1>\n                        <h1 className=\"standard-txt bolder-txt flex-self-end dark\">SETTINGS</h1>\n                    </div>\n                    <div className=\"full-width large-padding-top\">\n                        <div className=\"flexbox space-between full-width\">\n                            <div>\n                                <h2 className=\"standard-txt boldest-txt dark\">DARK MODE</h2>\n                                <p className=\"small-txt gray\">darken the mood and may conserve battery life</p>\n                            </div>\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" defaultChecked={this.props.darkMode} onChange={(e) => {\n                                    e.stopPropagation();\n                                    let toggle = !this.props.darkMode;\n                                    this.props.setDarkMode(toggle);\n                                    Settings.save({\"darkMode\": toggle, \"colorBlind\": this.props.colorBlind});\n                                    if (toggle) document.body.setAttribute('data-theme', 'dark');\n                                    else document.body.removeAttribute('data-theme')\n                                }}/>\n                                <span className=\"slider round\"/>\n                            </label>\n                        </div>\n                        <div className=\"flexbox space-between full-width medium-padding-top\">\n                            <div>\n                                <h2 className=\"standard-txt boldest-txt dark\">COLOR BLIND MODE</h2>\n                                <p className=\"small-txt gray\">add patterns to colors to distinguish teams</p>\n                            </div>\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" defaultChecked={this.props.colorBlind} onChange={(e) => {\n                                    e.stopPropagation();\n                                    let toggle = !this.props.colorBlind;\n                                    this.props.setColorBlind(toggle);\n                                    Settings.save({\"darkMode\": this.props.darkMode, \"colorBlind\": toggle});\n                                }}/>\n                                <span className=\"slider round\"/>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"absolute bottom\">\n                    <p className=\"small-txt lighter-txt gray\">Keep the developer <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"gray\" href=\"https://www.buymeacoffee.com/cfregly\">caffeinated</a></p>\n                </div>\n            </div>\n        )\n    }\n}\nexport default addRedux(SettingsPage);\n\n// Saves settings to local storage\nexport class Settings {\n    // Load settings from location storage if there\n    static load() { return JSON.parse(window.localStorage.getItem('settings')) || {}; }\n    // Save settings to local storage\n    static save(settings) { window.localStorage.setItem('settings', JSON.stringify(settings)); }\n}","// Connect4 App Page\n\nimport * as React from \"react\";\nimport GamePage from \"./Game\";\nimport HomePage from \"./Home\";\nimport SettingsPage, {Settings} from \"./Settings\";\nimport {addRedux} from \"./redux/reducer\";\nimport axios from \"axios\";\nimport {server} from \"./Network\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        // Load settings\n        let settings = Settings.load();\n        if (settings.darkMode) {\n            this.props.setDarkMode(settings.darkMode);\n            document.body.setAttribute('data-theme', 'dark');\n        } else document.body.removeAttribute('data-theme')\n\n        if (settings.colorBlind) { this.props.setColorBlind(settings.colorBlind); }\n    }\n\n    subscribe(data, counter) {\n        axios.post('https://' + server + '/join', data).then(_ => {\n            let sock = new WebSocket('wss://' + server + '/subscribe');\n            sock.onopen = () => { sock.send(JSON.stringify({ \"game_id\": this.props.gameID })); }\n            sock.onmessage = (msg) => {\n                let json = JSON.parse(msg.data)\n                if (this.props.stateID !== json.state_id) {\n                    this.props.setStateID(json.state_id);\n                    this.props.setBoard(json.board);\n                    this.props.setTurn(json.turn);\n                    this.props.setTeams(json.teams);\n                    this.props.setWinner(json.winner);\n                    this.props.setTimer(json.has_timer);\n                    this.props.setCurrentTime(json.cur_time);\n                    this.props.setTime(json.time);\n                    this.props.setStarted(json.started);\n                }\n            }\n            sock.onclose = () => {\n                // Websocket connection dropped after too many refreshes\n                if (counter < 5) {\n                    if (sock.readyState === WebSocket.CLOSED) { this.subscribe(data, counter + 1); }\n                } else {\n                    this.props.setTimeout(true);\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        // Set game if in one\n        if (document.location.pathname !== \"/\") {\n            this.props.setGameID(document.location.pathname.slice(1));\n            let data = {\"game_id\": this.props.gameID, \"players\": 2, \"timer\": false};\n            this.subscribe(data, 0);\n            this.props.setJoinedGame(true);\n            this.props.setPage(\"GAME\");\n        }\n    }\n\n    render() {\n        let page = <HomePage/>;\n        if (this.props.page === \"HOME\") page = <HomePage/>;\n        else if (this.props.page === \"GAME\") page = <GamePage/>;\n        else if (this.props.page === \"SETTINGS\") page = <SettingsPage/>;\n        return ( <div>{ page }</div> );\n    }\n}\nexport default addRedux(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport rootReducer from \"./redux/reducer\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={createStore(rootReducer)}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route path=\"*\" component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}